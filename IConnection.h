///////////////////////////////////////////////////////////////////////////////////////////////////
//
// IConnection.h
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef IConnection_H
#define IConnection_H

////////////////////////////////////////////////////////////////////////////////
// INCLUDED HEADERS
////////////////////////////////////////////////////////////////////////////////

#include <boost/shared_ptr.hpp>
#include "IActivate.h"

namespace Neural 
{
	template<class T> class IConnection: public virtual IActivate
	{
	public:		
		virtual ~IConnection(){};
		
		virtual void send(T inputValue) = 0;
							
	protected:
		IConnection(){};
		
	};
	typedef IConnection<double> IConnectionDouble;
	typedef boost::shared_ptr< IConnection<double> > IConnectionDoublePtr;

}

#endif

