///////////////////////////////////////////////////////////////////////////////////////////////////
//
// IReceiver.h
//
// Base interface for all receivers
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef IReceiver_H
#define IReceiver_H

////////////////////////////////////////////////////////////////////////////////
// INCLUDED HEADERS
////////////////////////////////////////////////////////////////////////////////

#include <boost/shared_ptr.hpp>
#include "IActivatable.h"

namespace Neural 
{	

	template<class T> class IReceiver: public virtual IActivatable
	{
	public:		
		virtual ~IReceiver(){};
		
		virtual void onReceive( T inputValue ) = 0;		
		
	protected:
		IReceiver(){};
		
	};
	

}

#endif

